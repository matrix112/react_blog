{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Modal","props","className","title","titleNum","App","useState","titleChange","modal","modalChange","titleNumChg","inputData","inputDataChg","arrRcmd","arrRcmdChange","chgArrRcmd","i","length","newArrRcmd","style","color","fontSize","onChange","e","target","value","onClick","addTitle","unshift","addRcmd","map","a","addArrRcmd","addRcmNum","undefined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,I,YCgGf,SAASA,EAAMC,GACb,OACE,yCACA,sBAAKC,UAAU,QAAf,UACI,0CAAcD,EAAME,MAAMF,EAAMG,aAChC,qCACA,0CAEJ,wBACA,2BAKWC,MAxGf,WAEE,MAA2BC,mBAAS,CAAC,yBAAyB,4BAA4B,qCAA1F,mBAAKH,EAAL,KAAYI,EAAZ,KACA,EAA2BD,oBAAS,GAApC,mBAAKE,EAAL,KAAYC,EAAZ,KACA,EAA8BH,mBAAS,GAAvC,mBAAKF,EAAL,KAAeM,EAAf,KACA,EAAgCJ,mBAAS,IAAzC,mBAAKK,EAAL,KAAgBC,EAAhB,KAEA,EAA+BN,mBAAS,IAAxC,mBAAKO,EAAL,KAAcC,EAAd,KAgBA,SAASC,EAAWC,GACPH,EAAQI,OAAnB,IAEIC,EAAU,YAAOL,GAGrB,OAFAK,EAAWF,GAAG,EACdF,EAAcI,GACPL,EAGT,OACE,sBAAKX,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKiB,MAAQ,CAAEC,MAAM,OAAQC,SAAS,QAAtC,uBAGF,gCACE,uBAAOC,SAAW,SAACC,GAAMX,EAAaW,EAAEC,OAAOC,UAC/C,wBAAQC,QAAU,WACd,IAAIC,EAAQ,YAAOxB,GAEnBwB,EAASC,QAAQjB,GACjBJ,EAAaoB,GAEb,IAAIE,EAAO,YAAOhB,GAClBgB,EAAQD,QAAQ,GAChBd,EAAce,IARlB,0BAcA1B,EAAM2B,KAAK,SAACC,EAAGf,GAEX,OACE,sBAAKd,UAAU,OAAf,UACE,qBAAIwB,QAAU,WAAMhB,EAAYM,IAAhC,UAAyCe,EACvC,sBAAML,QAAU,WACE,OAAfb,EAAQG,GAAYD,EAAWC,GA3ClD,SAAmBA,GACjB,IAAIgB,EAAU,YAAOnB,GACrBmB,EAAWhB,GAAKgB,EAAWhB,GAAG,EAC9BF,EAAckB,GAwCqCC,CAAUjB,IAD/C,+BAImBkB,IAAfrB,EAAQG,GAAiBD,EAAWC,GAAGH,EAAQG,MAIrD,0DACA,yBAXyBA,MAqBnC,wBAAQU,QAAU,WAAMjB,GAAY,IAApC,wBAGY,IAAVD,EACC,cAACR,EAAD,CAAOG,MAAOA,EAAOC,SAAUA,IAC9B,SC7EK+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.739d8458.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable */\n\nimport logo from './logo.svg';\nimport React, {useState} from 'react';\nimport './App.css';\n\nfunction App() {\n\n  let [title, titleChange] = useState(['Men coat recommended..','Gangnam Famous Restaurant','Gangnam Famous nuddle Restaurant']);\n  let [modal, modalChange] = useState(false);\n  let [titleNum, titleNumChg] = useState(0);\n  let [inputData, inputDataChg] = useState('');\n  //let [rcmd, rcmdChange] = useState(0);\n  let [arrRcmd, arrRcmdChange] = useState([]);\n  \n  let posts = 'Gangnam Famous Restaurant';\n\n  function chgTitle(){\n    var newTitle = [...title];  //spread operator ...immutable data\n    newTitle[0]='Women coat recommended..';\n    titleChange(newTitle);\n  }\n\n  function addRcmNum(i){\n    var addArrRcmd = [...arrRcmd];\n    addArrRcmd[i] = addArrRcmd[i]+1;\n    arrRcmdChange(addArrRcmd);\n  }\n\n  function chgArrRcmd(i){\n    var size = arrRcmd.length;\n    //console.log(\" arrRcmd size : \"+size+\", i : \"+i);\n    var newArrRcmd = [...arrRcmd];\n    newArrRcmd[i]=0;\n    arrRcmdChange(newArrRcmd);\n    return arrRcmd\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <div style={ { color:'grey', fontSize:'30px'} }>My Blog</div>\n      </div>\n\n      <div>\n        <input onChange={ (e)=>{ inputDataChg(e.target.value) } } />\n        <button onClick={ ()=>{\n            var addTitle = [...title];\n            //addTitle.push(inputData);\n            addTitle.unshift(inputData);\n            titleChange( addTitle );\n            \n            var addRcmd = [...arrRcmd];\n            addRcmd.unshift(0);\n            arrRcmdChange(addRcmd);\n          }\n        }>Posting..</button>\n      </div>\n      \n      {\n        title.map( (a, i)=>{\n            //arrRcmd[i];\n            return(\n              <div className='list' key={i}>\n                <h3 onClick={ ()=>{ titleNumChg(i) } }>{ a }\n                  <span onClick={ ()=>{ \n                     arrRcmd[i] === null?chgArrRcmd(i):addRcmNum(i)\n                    } }>üëç\n                  </span>{\n                      arrRcmd[i] === undefined?chgArrRcmd(i):arrRcmd[i]\n                    }\n                    {/* {console.log(arrRcmd[i])} */}\n                </h3>\n                <p>17th February published..</p>\n                <hr/>\n              </div>\n            )\n        })\n      }\n      \n      {/* <button onClick={ ()=>{ titleNumChg(0) } }>btn1</button>\n      <button onClick={ ()=>{ titleNumChg(1) } }>btn2</button>\n      <button onClick={ ()=>{ titleNumChg(2) } }>btn3</button> */}\n\n      <button onClick={ ()=>{ modalChange(true) } }>Viewing..</button>\n\n      {\n        modal === true\n        ?<Modal title={title} titleNum={titleNum}></Modal>\n        : null\n      }\n\n    </div>\n  );\n}\n\nfunction Modal(props){ // component\n  return(\n    <> {/* fragment -- using more than one tage in return() */}\n    <div className=\"modal\"> \n        <h2>Title : { props.title[props.titleNum] }</h2>\n        <p>Date</p>\n        <p>Detail</p>\n    </div>\n    <div></div>\n    <div></div>\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}